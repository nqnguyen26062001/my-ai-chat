// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- Các models cho chatbot của bạn ---

model User {
  id        String    @id @default(uuid()) // UUID cho ID người dùng
  username  String    @unique
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chats     Chat[]    // Mối quan hệ 1-nhiều với Chat
  orders    Order[]   // Mối quan hệ 1-nhiều với Order

  @@map("users") // Đặt tên bảng trong DB là 'users'
}

model Chat {
  id          String       @id @default(uuid())
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  title       String?      // Tiêu đề cuộc trò chuyện (ví dụ: "Cuộc trò chuyện về đặt hàng")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  messages    ChatMessage[] // Mối quan hệ 1-nhiều với ChatMessage

  @@map("chats") // Đặt tên bảng trong DB là 'chats'
}

model ChatMessage {
  id        String   @id @default(uuid())
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  sender    String   // 'user' or 'ai'
  content   String   @db.Text // Kiểu Text cho nội dung dài
  createdAt DateTime @default(now())

  @@map("chat_messages") // Đặt tên bảng trong DB là 'chat_messages'
}

// --- Ví dụ cho chức năng đặt hàng (Nếu bạn có) ---
model Order {
  id         String    @id @default(uuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  status     OrderStatus @default(PENDING)
  totalPrice Decimal   @db.Decimal(10, 2)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("orders")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}